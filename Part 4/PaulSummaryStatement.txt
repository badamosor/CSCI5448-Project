4) Summary 

The work progressed nicely on two fronts: (1) The MVC implementation took shape. A fair amount of the final functionality of the system was implemented including adding users, creating playlists, and exporting to spotify. (2) Several design patterns were prototyped including Strategy, Visitor, Observer, and Facade.  

The Strategy, Visitor, and Observer patterns were implemented and test drivers written outside of the model. A rough version of the Facade was written for the Spotify interface. 

Note: Much of the work with the model and the prototyping of design patterns was done in parallel.  The nature of the structure of the model was fairly fluid.  Therefore we did a separate class diagram for the Search function which will be using Strategy and Visitor. The first task in the next phase will be integrating search into the model.

5) Breakdown
  
   Paul - Implemented the Search prototype with Strategy and Visitor.
          Constructed the class diagram for Search

   Luke - Much of the MVC implementation.  
          Got the team rolling in the implementation.
          Redid the project class diagram based on the MVC implementation to date.

   Bada - Much of the MVC implementation.  
          Project writeup.
          Observer prototype.

7) Estimate of Remaining Effort

   - 6-8 hours integrating the Search into the model
   - 10-20 hours integrating editing of playlists with search results
   - 30 hours writing rest of functionality

8) Strategy - We prototyped Search using Strategy and two implementations that can be dynamically switched. The code is in Strategy.py.
   Visitor - We prototyped one of the search methods using the Visitor design pattern.
   Facade - Was prototyped in the model to abstract the Spotify interface from the application.
   Strategy - Was prototyped in the model as a nice way to export to one of the three streaming services dynamically. 

9) - Show the class diagram for the actual design pattern
 
        I uploaded images of the Visitor and Strategy class diagrams.

   - Show the portion of your class diagram that implements this design pattern

        I marked up the Search.png and saved it as Search.jpg with the markup of where Strategy and Visitor are.

   - Designate the participants in your own diagram

        Using the same nomenclature as the Visitor and Strategy class diagrams, I markeup up Search.jpg with the participants.
        
